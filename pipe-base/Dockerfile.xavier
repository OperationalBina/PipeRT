FROM registry.hub.docker.com/mdegans/deepstream:aarch64-samples

### build argumements ###
# change these here or with --build-arg FOO="BAR" at build time
ARG OPENCV_VERSION="4.1.1"
ARG OPENCV_DO_TEST="FALSE"
# note: 8 jobs will fail on Nano. Try 1 instead.
ARG OPENCV_BUILD_JOBS="8"
# required for apt-get -y to work properly:
ARG DEBIAN_FRONTEND=noninteractive
ENV LC_CTYPE en_US.UTF-8
ENV LANG en_US.UTF-8
COPY nvidia-l4t-apt-source.list /etc/apt/sources.list.d/nvidia-l4t-apt-source.list
COPY jetson-ota-public.asc /etc/apt/trusted.gpg.d/jetson-ota-public.asc

#Install dependencies
RUN apt-get update -y \
    && apt-get upgrade -y \
    && apt-get autoremove -y \
    && apt-get install -y \
        gcc \
        build-essential \
        zlib1g-dev \
        wget \
        unzip \
        cmake \
        gfortran \
	software-properties-common \
        libblas-dev \
        liblapack-dev \
        libgtk2.0-dev \
        libatlas-base-dev \
        git \
    && apt-get clean
RUN add-apt-repository universe

#Install OPENCV dependencies
RUN apt-get update -y \
   && apt-get upgrade -y \
   && apt-get autoremove -y \
   && apt-get install -y \
       build-essential \
       cmake \
       git \
       gfortran \
       libatlas-base-dev \
       libavcodec-dev \
       libavformat-dev \
       libavresample-dev \
       libcanberra-gtk3-module \
       libdc1394-22-dev \
       libeigen3-dev \
       libglew-dev \
       libgstreamer-plugins-base1.0-dev \
       libgstreamer-plugins-good1.0-dev \
       libgstreamer1.0-dev \
       libgtk-3-dev \
       libjpeg-dev \
       libjpeg8-dev \
       libjpeg-turbo8-dev \
       liblapack-dev \
       liblapacke-dev \
       libopenblas-dev \
       libpng-dev \
       libpostproc-dev \
       libswscale-dev \
       libtbb-dev \
       libtbb2 \
       libtesseract-dev \
       libtiff-dev \
       libv4l-dev \
       libxine2-dev \
       libxvidcore-dev \
       libx264-dev \
       pkg-config \
       python3-dev \
       python3-numpy \
       python3-matplotlib \
       python3-pip \
       qv4l2 \
       v4l-utils \
       v4l2ucp \
       zlib1g-dev \
	libffi-dev \
   && apt-get clean


# Install requirements
COPY xavier-requirements.txt .
RUN pip3 install --upgrade pip \
    && pip3 install \
        -r xavier-requirements.txt --default-timeout=100 \
    && rm -fr /root/.cache && \
    rm xavier-requirements.txt

# Install pycocotools
RUN pip3 install --upgrade cython
RUN pip3 install --upgrade numpy

RUN DEBIAN_FRONTEND=noninteractive apt-get install -y tshark

# Install OPENCV
COPY build_opencv.sh .
RUN /bin/bash build_opencv.sh

#RUN apt-get install -y ffmpeg

#TODO - remember to remove this when rebuilding and add it to the requirements file
RUN pip install waitress